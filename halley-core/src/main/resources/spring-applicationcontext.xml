<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:pigeon="http://code.dianping.com/schema/pigeon"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/tool
           http://www.springframework.org/schema/tool/spring-tool.xsd
           http://code.dianping.com/schema/pigeon
           http://code.dianping.com/schema/pigeon/pigeon-service-2.0.xsd">

    <pigeon:annotation />
	<context:annotation-config />
	<context:component-scan base-package="com.dianping" />
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${JDBC.driver}" />
		<property name="username" value="${JDBC.username}" />
		<property name="password" value="${JDBC.password}" />
		<property name="url" value="${JDBC.url}" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
    </bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:sqlSessionFactory-ref="sqlSessionFactory" p:basePackage="com.dianping.data.warehouse.dao" />

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />

    <!-- transaction -->
    <aop:config>
        <aop:pointcut id="defaultServiceOperation"
                      expression="execution(* com.dianping.data.warehouse.dao.proxy.*.*(..))"/>
        <aop:advisor pointcut-ref="defaultServiceOperation" advice-ref="defaultTxAdvice"/>
    </aop:config>

    <tx:advice id="defaultTxAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*"/>
            <!--<tx:method name="*"/>-->
        </tx:attributes>
    </tx:advice>

    <bean id="init" class="com.dianping.data.warehouse.executer.InitExecuter" />
    <bean id="execute" class="com.dianping.data.warehouse.executer.InstanceExecuter" />
    <bean id="ready" class="com.dianping.data.warehouse.executer.ReadyExecuter" />
    <bean id="reset" class="com.dianping.data.warehouse.executer.ResetExecuter" />
    <bean id="synchronized" class="com.dianping.data.warehouse.executer.SynchronizeExecuter" />
    <bean id="timeout" class="com.dianping.data.warehouse.executer.TimeoutExecuter" />
    <bean id="wait" class="com.dianping.data.warehouse.executer.WaitExecuter" />

    <bean id="initService"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="init"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false" />

    </bean>
    <bean id="executeService"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="execute"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="true" />
    </bean>
    <bean id="readyService"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="ready"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false" />
    </bean>
    <bean id="synchronizedService"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="ready"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false" />
    </bean>

    <bean id="timeoutService"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="timeout"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false" />
    </bean>
    <bean id="waitService"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="wait"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false" />
    </bean>

    <!--trigger-->
    <bean id="initTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="initService"/>
        <property name="cronExpression" value="10 0-59/10 * * * ?"/>
    </bean>

    <bean id="executeTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="executeService"/>
        <property name="cronExpression" value="*/5 * * * * ?"/>
    </bean>

    <bean id="readyTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="readyService"/>
        <property name="cronExpression" value="15 * * * * ?"/>
    </bean>

    <bean id="synchronizedTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="synchronizedService"/>
        <property name="cronExpression" value="20 * * * * ?"/>
    </bean>

    <bean id="timeoutTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="timeoutService"/>
        <property name="cronExpression" value="30 * * * * ?"/>
    </bean>

    <bean id="waitTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="waitService"/>
        <property name="cronExpression" value="40 0-59/10 * * * ?"/>
    </bean>

    <bean id="cronTaskManager" lazy-init="true" autowire="no"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="waitTrigger"/>
                <ref bean="timeoutTrigger"/>
                <ref bean="synchronizedTrigger"/>
                <ref bean="readyTrigger"/>
                <ref bean="executeTrigger"/>
                <ref bean="initTrigger"/>
            </list>
        </property>
        <property name="schedulerName" value="startExecute"/>
        <property name="configLocation" value="classpath:quartz.properties" />
    </bean>



</beans>